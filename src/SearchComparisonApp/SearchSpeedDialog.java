/*
 * Copyright (c) 2012, Chad Oftedahl. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   - Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 *   - The name of Chad Oftedahl may NOT be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package SearchComparisonApp;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Point;
import javax.swing.*;

/**
 *
 * @author Chad Oftedahl (chadoftedahl@gmail.com)
 */
public class SearchSpeedDialog extends JDialog {
   
    //<editor-fold defaultstate="collapsed" desc="Declarations">
    JTextField searchSpeedJTextField;
    JButton okJButton;
    JButton cancelJButton;
    MainForm mainForm;
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="Constructors">
        public SearchSpeedDialog(MainForm form){
        super(form, "Search Speed", true);
        
        mainForm = form;
        
        // If there was a form, set dialog position inside
        if (form != null) {
            Dimension parentSize = form.getSize();
            Point p = form.getLocation();
            setLocation(p.x + parentSize.width / 4, p.y + parentSize.height/4);
        }
        
        initializeComponents();
        
        setupEventListeners() ;
        
        setVisible(true);
    }
    
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Initialization Methods">
      private void initializeComponents(){
        
        Box main = Box.createVerticalBox();
        
        JPanel topPanel = new JPanel();
        topPanel.setLayout(new FlowLayout());
        
        topPanel.add(new JLabel("nodes per second"),FlowLayout.LEFT);
        
        searchSpeedJTextField = new JTextField();
        searchSpeedJTextField.setPreferredSize(new Dimension(55,25));
        searchSpeedJTextField.setText(Integer.toString(mainForm.getSearchSpeed()));
        searchSpeedJTextField.selectAll();
        topPanel.add(searchSpeedJTextField, FlowLayout.LEFT);
        
        topPanel.add(new JLabel("Process "),FlowLayout.LEFT);
        
        main.add(topPanel);
        
        JPanel bottomPanel = new JPanel();
        bottomPanel.setLayout(new FlowLayout());
        
        cancelJButton = new JButton("CANCEL");
        bottomPanel.add(cancelJButton, FlowLayout.LEFT);
        
        okJButton = new JButton("OK");
        bottomPanel.add(okJButton, FlowLayout.LEFT);
        
        main.add(bottomPanel);
        
        getContentPane().add(main);
        
        pack();
    }

    private void setupEventListeners() {
        
    okJButton.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
         public void mousePressed(java.awt.event.MouseEvent evt) {
                okJButtonMousePressed();
        }   
    });
    
    cancelJButton.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
         public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelJButtonMousePressed();
        }       
    });
    
    }
    
    //</editor-fold>
  
    //<editor-fold defaultstate="collapsed" desc="Handlers for events generated by this object">
    private void okJButtonMousePressed() {
        int pauseDuration = Integer.parseInt(searchSpeedJTextField.getText());
        
        mainForm.setSearchSpeed(pauseDuration); 
        mainForm.fireSearchThrottlingChange();
        
        dispose();
    }
       
    private void cancelJButtonMousePressed() {
        dispose();
    }
    //</editor-fold>

}
